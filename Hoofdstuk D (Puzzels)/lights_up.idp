/*
* lights_up.idp
* Cedric Lefevre
* Romeo Permentier
* 19/05/2021
*/
procedure main() {
    stdoptions.nbmodels = 0
    printmodels(modelexpand(T,normal_7x7))
    //printmodels(modelexpand(T,hard_14x14))

}

vocabulary Voc {
    /* ----- TYPE ----- */
    type R isa nat
    type K isa nat
    type Getal isa int

    /* ----- CONSTANTE ----- */ 

    /* ----- RELATIE ----- */
    Buren(R,R,K,K)
    Verlicht(R,K)
    Obstakel(R, K)
    Fout(R,K)
    Lamp(R,K)

    /* ----- FUNCTIE ----- */
    LampBuren(R,K):Getal
    partial ObstakelWaarde(R, K):Getal

}

structure normal_7x7 : Voc {
    R = {1..7}
    K = {1..7}
    Getal = {0..4}

    Obstakel = {
        1,2; 1,3; 1,4;
        2,7;
        3,7;
        4,1; 4,4; 4,7;
        5,1;
        6,1;
        7,4; 7,5; 7,6;

    }
    ObstakelWaarde={
        1,4,2;
        4,1,2; 4,4,1;
        6,1,1;
        7,6,1;  
    }


}
structure hard_14x14 : Voc {
    R = {1..14}
    K = {1..14}
    Getal = {0..4}    

    Obstakel = {
        1,2;	1,3;	1,7;	1,11;
        2,2;	2,13;	2,14;
        3,4;	3,14;
        4,1;	4,4;	4,8;	4,9;	4,10;	4,11;	4,12;
        5,4;
        6,4;	6,7;	6,8;
        7,4;	7,6;	7,9;	7,14;
        8,1;	8,6;	8,9;	8,11;
        9,7;	9,8;	9,11;
        10,11;
        11,3;	11,4;	11,5;	11,6;	11,7;	11,11;	11,14;
        12,1;	12,11;
        13,1;	13,2;	13,13;
        14,4;	14,8;	14,12;	14,13;
    }
    ObstakelWaarde={
        1,2,1;	1,7,1;	1,11,0;
        2,2,1;	2,14,1;

        4,8,0;	4,9,1;	4,10,1;

        6,4,1;
        7,6,1;	7,9,1;	7,14,0;
        8,1,1;	8,11,0;
        9,7,2;	9,11,0;

        11,5,1;	11,6,1;	11,7,1;	11,11,1;	11,14,0;

        13,1,1;	13,13,2;
        14,8,2;
    }
}

theory T : Voc {
/* --------------------------- BUREN ---------------------------*/
    // HOU EEN MAPPING BIJ VAN DE BUREN VAN (X1,Y1)
    ! x1 x2 y1 y2: Buren(x1, x2, y1, y2) <=> (abs(x1-x2)=1 & y1=y2) | (abs(y1-y2)=1 & x1=x2).

    // TEL DE BUREN (DIE EEN LAMP) ZIJN VAN (X1,Y1)
    {
        !x1 y1: LampBuren(x1, y1) = #{x2[R], y2[R] : Lamp(x2,y2) & Buren(x1, x2, y1, y2)}.
    }

/* --------------------------- DEFINIEER VERLICHTE VAKJES ---------------------------*/
    {
        //VERLICHT INDIEN ER EEN LAMP IN DEZELFDE RIJ OF KOLOM STAAT, ZONDER OBSTAKEL ER TUSSEN
            // Zelfde kolom
            ! x,y : Verlicht(x,y) <- ?y1 : Lamp(x,y1) & ~(?z : (y<z<y1 | y1<z<y) & Obstakel(x,z)).
            // Zelfde rij
            ! x,y: Verlicht(x,y) <- ?x1 : Lamp(x1,y) & ~(?z : (x<z<x1 | x1<z<x) & Obstakel(z,y)).
    }

/* --------------------------- OBSTAKEL(X,Y)~=LAMP(X,Y) ---------------------------*/
    !x1[R],x2[R], y1[K], y2[K]:Lamp(x1,y1) & Lamp(x2,y2) => ~(Obstakel(x1,y1)|Obstakel(x2,y2)).

/* --------------------------- DEFINIEER FOUTEN ---------------------------*/
    {
        // FOUT INDIEN EEN OBSTAKEL NIET HET JUISTE AANTAL LAMPEN HEEFT ALS BUUR
        ! x,y : Fout(x,y) <- LampBuren(x,y) ~= ObstakelWaarde(x,y) & ?c[Getal] : c=ObstakelWaarde(x, y).

        // FOUT INDIEN TWEE LAMPEN OP DEZELFDE RIJ OF KOLOM ZONDER OBSTAKEL ER TUSSEN
            // Rij={....(x,y) .............(x,y1).....} --> FOUT
            ! x,y : Fout(x, y) <- Lamp(x,y) & ?y1 : y~=y1 & Lamp(x,y1)& ~(?z : (y<z<y1 | y1<z<y) &  Obstakel(x,z)).

            // Kolom={....(x,y) .............(x1,y).....} --> FOUT
            ! x,y :Fout(x, y) <-Lamp(x,y) & ?x1 : x~=x1 & Lamp(x1,y) & ~(?z : (x<z<x1 | x1<z<x) & Obstakel(z,y)).


        //FOUT INDIEN EEN VAKJE NIET VERLICHT IS (EN GEEN OBSTAKEL IS)
        ! x,y :Fout(x, y) <- ~Obstakel(x,y) & ~Verlicht(x,y).
    }
    
    // AANTAL FOUTEN MOET 0 ZIJN
    #{x[R] y[K]: Fout(x,y)}=0.
}