//TODO/ OK
/*
 * permentier_sudoku.idp
 * Romeo Permentier
 * 17/05/2021
 */
vocabulary V {
    /* ----- TYPE ----- */
    type R isa nat //RIJ
    type K isa nat //KOLOM
    type G isa nat //GETAL
    /* ----- CONSTANTE ----- */  
    
    /* ----- RELATIE ----- */
    Gegeven(R, K, G)
    Vierkant(R, K, R, K)
    
    /* ----- FUNCTIE ----- */
    Oplossing(R, K): G
    
}

structure S : V {
    R = {1..9}
    K = {1..9}
    G = {1..9}
    
    Gegeven = {
        1,2,2; 1,4,3; 
        2,1,7; 2,2,1; 2,6,9; 2,7,3 ;
        3,2,3; 3,3,4; 3,4,5; 3,8,7 ;
        4,1,9; 4,4,6; 
        5,2,4; 5,8,6;
        6,6,4; 6,9,9; 
        7,2,8; 7,6,6; 7,7,7; 7,8,4; 
      	8,3,3; 8,4,4; 8,8,5; 8,9,8;
        9,6,1; 9,8,9
    }
}

theory T : V {
    // GEGEVEN GETAL IS OOK EEN OPLOSSING
    !r[R], k[K], g[G]: Gegeven(r, k, g) => Oplossing(r, k) = g.
    
    // DEFINITIE VAN 2 VAKJES IN ZELFDE VIERKANT
    {	
        !r1[R],r2[R], k1[K], k2[K]: Vierkant(r1, k1, r2, k2) <-
        	// RELATIE GELDT NIET VOOR EEN VAKJE MET ZICHZELF
        	~(r1 = r2 & k1 = k2) 
        
        	&
        	/*
        		FORMULA y(x) "x - (x-1)%3 = y"
        		y(1)=y(2)=y(3)=1
               	y(4)=y(5)=y(6)=4
        		y(7)=y(8)=y(9)=7
        	*/
        
        	r1 - (r1-1)%3 = r2 - (r2-1)%3 
        	& 
        	k1 - (k1-1)%3 = k2 - (k2-1)%3.
        
        	
    }
    // GEEN DUBBELE WAARDEN IN ...
       !r1[R],r2[R], k1[K], k2[K]:
    		// ... EEN VIERKANT
    		Vierkant(r1, k1, r2, k2) 
    		|
    		// ... EEN RIJ
    		(r1=r2 & k1~=k2)
    		|
    		// ... EEN KOLOM
    		(r1~=r2 & k1=k2)
    	=> Oplossing(r1, k1) ~= Oplossing(r2, k2).

    
    
}

procedure main() {
    stdoptions.nbmodels = 0
    printmodels(modelexpand(T,S))
}
