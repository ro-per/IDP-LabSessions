/*
 * lights_up.idp
 * Cedric Lefevre
 * Romeo Permentier
 * 17/05/2021
 */
vocabulary Voc {
    /* ----- TYPE ----- */
 	type R isa nat //RIJ
    type K isa nat //KOLOM
    type Getal isa int
    
    /* ----- CONSTANTE ----- */  
    
    /* ----- RELATIE ----- */
    Lamp(R,K)
    Verlicht(R,K)
    Obstakel(R, K,Getal)
    


    
    /* ----- FUNCTIE ----- */

    
}

structure Struct : Voc {
    R = {1..7}
    K = {1..7}
    Getal = {-1..4}
    
    Obstakel = {
        1,2,0; 1,3,0;
        2,7,1;
        3,7,0;
        
        5,1,1;
        6,1,-1;
        7,5,2; 7,6,-1;
        
    }
    
    
  
}

theory Theo : Voc {
    #{r[R] k[K]: Lamp(r,k)} = 2.
    
//LAMPEN KUNNEN ELKAAR NIET VERLICHTEN
	
    !r1[R],r2[R], k1[K], k2[K]: 
    // GELIJKE RIJ OF GELIJKE KOLOM
    (
    	(r1=r2 & k1~=k2) | (r1~=r2 & k1=k2)
    )
    &
    (
    	Lamp(r1,k1)
    )
    => 
    ~Lamp(r2, k2).
    
// OP EEN OBSTAKEL KAN GEEN LAMP STAAN
    ! r k: ~(Lamp(r,k) & Obstakel(r,k,g)).
    
  
    
    

// EEN VAKJE IS VERLICHT ALS ER EEN LAMP STAAT IN DEZELFDE RIJ OF KOLOM
    { !r1[R], k1[K],r2[R], k2[K]: Verlicht(r1,k1)<-
        (
            (k1=k2 & Lamp(r2,k2)) & ~Obstakel(r1,k1,Getal)
            |
            (r1=r2 & Lamp(r2,k2)) & ~Obstakel(r1,k1,Getal)
        )
        .}
   
   
    // EEN OBSTAKEL KAN NOOIT VERLICHT ZIJN
    ! r k: (Verlicht(r,k) & ~Obstakel(r,k,Getal))
    		|
    		(~Verlicht(r,k) & Obstakel(r,k,Getal))
    .
    
}

procedure main() {
    stdoptions.nbmodels = 100
    printmodels(modelexpand(Theo,Struct))
}